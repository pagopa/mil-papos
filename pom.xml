<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.pagopa.swclient.mil</groupId>
    <artifactId>papos</artifactId>
    <version>1.0.2</version>

    <properties>
		<!-- Java version -->
		<java.version>21</java.version>
		<maven.compiler.release>${java.version}</maven.compiler.release>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<!-- Plug-ins version -->
		<compiler-plugin.version>3.13.0</compiler-plugin.version>
		<surefire-plugin.version>3.2.5</surefire-plugin.version>
		<sonar-plugin.version>3.11.0.3922</sonar-plugin.version>
		<jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
		<depcheck-plugin.version>1.2.1</depcheck-plugin.version>
		<!-- Encodings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- Quarkus version -->
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
		<quarkus.platform.version>3.11.3</quarkus.platform.version>
		<!-- Other dependecies version -->
		<common.version>2.3.0</common.version>
		<lombok.version>1.18.32</lombok.version>
		<otel-exporter-azure.version>3.8.3.0</otel-exporter-azure.version>
		<assertj-core.version>3.25.3</assertj-core.version>
		<!-- Sonar config -->
		<sonar.host.url>https://sonarcloud.io:443/</sonar.host.url>
		<sonar.organization>pagopa</sonar.organization>
		<sonar.projectKey>pagopa_mil-papos</sonar.projectKey>
		<sonar.qualitygate.wait>true</sonar.qualitygate.wait>
		<sonar.qualitygate.timeout>300</sonar.qualitygate.timeout>
		<sonar.coverage.jacoco.xmlReportPaths>target/jacoco-report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		
		<skipITs>true</skipITs>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-mongodb-panache</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest</artifactId>
        </dependency>
        <dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-jwt</artifactId>
		</dependency>
        <dependency>
			<groupId>it.pagopa.swclient.mil</groupId>
			<artifactId>common</artifactId>
			<version>${common.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Test -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-test-security-jwt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5-mockito</artifactId>
			<scope>test</scope>
			<!-- To avoid Quarkus bug with Mockito -->
			<exclusions>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-subclass</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jacoco</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Observability -->
		<!-- Logging -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-logging-json</artifactId>
		</dependency>
		<!-- Tracing -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-opentelemetry</artifactId>
		</dependency>
		<!-- OpenTelemetry exporter for Azure Application Insights -->
		<dependency>
			<groupId>io.quarkiverse.opentelemetry.exporter</groupId>
			<artifactId>quarkus-opentelemetry-exporter-azure</artifactId>
			<version>${otel-exporter-azure.version}</version>
		</dependency>
    </dependencies>
    
    <repositories>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/pagopa/mil-common</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>github</id>
			<url>https://maven.pkg.github.com/pagopa/depcheck</url>
		</pluginRepository>
	</pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
				<groupId>it.pagopa.maven</groupId>
				<artifactId>depcheck</artifactId>
				<version>${depcheck-plugin.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<fileName>dep-sha256.json</fileName>
					<addFileName>dep-sha256-man.json</addFileName>
					<includePlugins>false</includePlugins>
					<includeParent>false</includeParent>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-quarkus.exec</dataFile>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>METHOD</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>TOTALCOUNT</value>
											<maximum>15</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
        </profile>
        
        <!-- To execute SCA with SonarCloud:                                      -->
		<!--   1. export SONAR_TOKEN=<sonar token provided by PagoPA DevOps team> -->
		<!--   2. mvn verify -Pvalidate                                           -->
		<profile>
			<id>validate</id>
			<activation>
				<property>
					<name>validate</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- SCA with Sonar -->
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>${sonar-plugin.version}</version>
						<executions>
							<execution>
								<id>sca_with_sonar</id>
								<!-- after test -->
								<phase>test</phase>
								<goals>
									<goal>sonar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
    </profiles>
</project>
